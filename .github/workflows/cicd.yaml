name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  packages: write
  issues: write
  pages: write
  id-token: write

env:
  PYTHON_VERSION: "3.10"
  NODE_LTS_VERSION: "22.x"

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  check-markdown:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Check Markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          folder-path: '.'
          config-file: '.github/markdown-link-check-config.json'

  check-tokens:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Check Tokens
        run: |
          make check-tokens

  build-site:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build Site
        run: |
          make site-build
          
      - name: Upload Site Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  validate-mcp:
    name: Validate MCP Server
    defaults:
      run:
        working-directory: ./mcp/ai-developer-guide-mcp
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}

      - name: Install Dependencies
        run: make init

      - name: Lint
        run: make lint

      - name: Build
        run: make build

      - name: Test with Coverage
        run: make test

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mcp-build-artifacts
          path: ./mcp/ai-developer-guide-mcp/artifacts/

  upload-coverage:
    name: Upload Coverage
    needs: validate-mcp
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./mcp/ai-developer-guide-mcp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: mcp-build-artifacts
          path: ./artifacts

      - name: Upload Coverage
        uses: codecov/codecov-action@v5
        with:
          directory: ./artifacts/coverage
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: mcp-server
          
  release:
    needs: [check-markdown, check-tokens, build-site, validate-mcp]
    runs-on: ubuntu-24.04
    outputs:
      released: ${{ steps.release-please.outputs.release_created }}
      tag: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release-please
        with:
          manifest-file: .github/release-please-manifest.json
          config-file: .github/release-please-config.json

  deploy-site:
    needs: [release, build-site]
    if: ${{ needs.release.outputs.released }}
    runs-on: ubuntu-24.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  release-mcp:
    name: Release MCP Server to NPM
    needs: [release]
    if: ${{ needs.release.outputs.released }}
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./mcp/ai-developer-guide-mcp
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node for Release
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Build Distributable
        run: make build

      - name: Publish to NPM
        run: |
          if [ "$NODE_AUTH_TOKEN" == "" ]; then
            echo "The 'NPM_TOKEN' secret must be set to deploy to NPM"
            exit 1
          else
            echo "Publishing to NPM..."
            npm publish --access=public
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          npm set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}
          npm publish --registry https://npm.pkg.github.com
